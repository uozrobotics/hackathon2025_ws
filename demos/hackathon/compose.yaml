x-yaml-anchors:  # create anchors "&something" that can be referenced using "*something"
  base: &base
    extends:
      file: ../../docker/common.yaml
      service: x11_base
      # service: x11_gpu  # use this service if you want to use nvidia GPU
    volumes:
      - ./config:/config:Z
      # - /tmp:/tmp  # uncomment to read generated files in /tmp


services:
  bash:  # this service can be used to open a shell in the ROS2 environment
    <<: [*base]  # add elements of 'x-yaml-anchors.base'
    profiles: [optional]  # avoid starting this service when 'compose up'
    command: bash --rcfile /etc/bash.bashrc

  simulator:  # start the simulator and spawn the robot
    <<: [*base]
    command: >-
      ros2 launch hackathon_bringup simulator.launch.py
        demo_config_directory:=/config
        robot_config_directory:=/config/robot
        mode:=simulation_gazebo_classic
        robot_namespace:=robot

  localisation:  # compute absolute localization using GNSS, IMU and odometry measurements
    <<: [*base]
    depends_on: [simulator]
    command: >-
      ros2 launch tirrex_demo robot_localisation.launch.py
        demo_config_directory:=/config
        robot_config_directory:=/config/robot
        mode:=simulation_gazebo_classic
        robot_namespace:=robot

  path_following:  # control the robot to follow the specified trajectory file
    <<: [*base]
    depends_on: [localisation]
    command: >-
      ros2 launch tirrex_demo robot_path_following.launch.py
        demo_config_directory:=/config
        robot_config_directory:=/config/robot
        mode:=simulation_gazebo_classic
        robot_namespace:=robot
        trajectory_filename:=test01.traj

  path_recorder:  # record a trajectory file from the current localization
    <<: [*base]
    depends_on: [localisation]
    profiles: [optional]
    command: >-
      ros2 launch tirrex_demo robot_path_recorder.launch.py
        demo_config_directory:=/config
        robot_config_directory:=/config/robot
        mode:=simulation_gazebo_classic
        robot_namespace:=robot
        trajectory_filename:=/config/paths/recorded.traj

  robot_view:  # open a third-person view of the robot
    <<: [*base]
    stop_signal: SIGTERM
    depends_on: [simulator]
    profiles: [optional]
    command: ros2 run rqt_image_view rqt_image_view /robot/robot_view/image_raw

  evaluation:  # start evaluation nodes and publish information for rviz
    <<: [*base]
    depends_on: [simulator]
    command: >-
      ros2 launch hackathon_bringup evaluation.launch.py
        demo_config_directory:=/config
        robot_namespace:=robot

  rviz:  # start evaluation nodes and publish information for rviz
    <<: [*base]
    depends_on: [simulator]
    command: rviz2 -d /config/evaluation.rviz
